library(rtools)
dfs <- c(TRUE,FALSE,TRUE,TRUE,FALSE,TRUE,TRUE)
for(i in dfs) {
if(i==TRUE){
print("yes")
} else {
print("no")
}
}
data.frame(matrix(nrow = 5,ncol = 5))
s<-data.frame(matrix(nrow = 5,ncol = 5))
for(i in dfs) {
if(i==TRUE){
dfs[,6] <- "ATT"
} else {
dfs[,6] <- ""
}
}
for(i in dfs) {
if(i==TRUE){
dfs[,5] <- "ATT"
} else {
dfs[,5] <- ""
}
}
s<-as.data.frame(matrix(nrow = 5,ncol = 5))
for(i in dfs) {
if(i==TRUE){
dfs[,5] <- "ATT"
} else {
dfs[,5] <- ""
}
}
for(i in dfs) {
if(i==TRUE){
dfs[5,] <- "ATT"
} else {
dfs[5,] <- ""
}
}
source('~/cleandata/R/hello.R', echo=TRUE)
dfs[5,]
dfs[5,]
dfs[1,]
for(i in dfs) {
if(i==TRUE){
dfs[1,] <- "ATT"
} else {
dfs[1,] <- ""
}
}
for(i in dfs) {
if(i==TRUE){
dfs[1,] <- "ATT"
} else {
dfs[1,] <- ""
}
}
s<-as.data.frame(matrix(w,nrow = 5,ncol = 5))
s<-as.data.frame(matrix("w',nrow = 5,ncol = 5))
s<-as.data.frame(matrix("w',nrow = 5,ncol = 5))
s<-as.data.frame(matrix("w',nrow = 5,ncol = 5))
s<-as.data.frame(matrix("w",nrow = 5,ncol = 5))
s<-as.data.frame(matrix("w",nrow = 5,ncol = 5))
for(i in dfs) {
if(i==TRUE){
dfs[1,] <- "ATT"
} else {
dfs[1,] <- ""
}
}
s<-as.data.frame("w",nrow = 5,ncol = 5)
s
s<-as.data.frame(c(1:9),nrow = 5,ncol = 5)
s
source('~/cleandata/R/hello.R', echo=TRUE)
s<-as.data.frame(c(1:10),nrow =5,ncol = 1)
s
s<-data.frame(c(1:10),nrow =5,ncol = 1)
s
s<-data.frame((1:10),nrow =5,ncol = 1)
s
s<-data.frame(as.matrix(1:10),nrow =5,ncol = 1)
s
s<-data.frame(c(d=1:5,c=1:5)
s<-data.frame(c(d=1:5,c=1:5))
s<-data.frame(c(d=1:5,c=1:5))
s
df
setwd("C:/Users/kirtee/Downloads/ssd")
teac1 = read_excel("Teacher Online Assessment_2(1).xlsx",sheet = 2,col_names = TRUE)
df <- readxl::read_excel("InputFile.xlsx")
nrow(df)
df2 <- df[7,]
df2
df2 <- df[7,7]
df2
View(df2)
dfs <- c(TRUE,FALSE,TRUE,TRUE,FALSE,TRUE,TRUE)
df[7,7]
df2 <- df[,7]
df2
df2 <- df[10,]
df2
View(df2)
dim(df2)
df2 <- df[,1:7]
dim(df2)
for(i in dfs) {
if(i==TRUE){
dfs[1,] <- "ATT"
} else {
dfs[1,] <- ""
}
}
for(i in dfs) {
if(i==TRUE){
dfs[8,] <- "ATT"
} else {
dfs[8,] <- ""
}
}
dim(dfs)
dfs
as.list(dfs)
as.vector(dfs)
class(dfs)
as.data.frame(dfs)
dfs<-as.data.frame(dfs)
for(i in dfs) {
if(i==TRUE){
dfs[8,] <- "ATT"
} else {
dfs[8,] <- ""
}
}
dfs
dfs <- c(TRUE,FALSE,TRUE,TRUE,FALSE,TRUE,TRUE)
dfs<-as.data.frame(dfs)
df2 <- df[,1:7]
for(i in dfs) {
if(i==TRUE){
dfs[8,] <- "ATT"
} else {
dfs[8,] <- ""
}
}
dfs[8,]
df2
dfs
dfs <- c(TRUE,FALSE,TRUE,TRUE,FALSE,TRUE,TRUE)
dfs
dfs[[3]]
for(i in dfs) {
if(i==TRUE){
dfs[8,] <- "ATT"
} else {
dfs[8,] <- ""
}
}
for(i in dfs) {
if(i==TRUE){
dfs[8,] <- "ATT"
} else {
dfs[8,] <- ""
}
}
dfs[8,] <- "ATT"
dfs[7,] <- "ATT"
dfs[4,] <- "ATT"
dfs[4,]
as.data.frame(dfs)
for(i in dfs) {
if(i==TRUE){
ds[8,] <- "ATT"
} else {
ds[8,] <- ""
}
}
for(i in dfs) {
if(i==TRUE){
df2[8,] <- "ATT"
} else {
df2[8,] <- ""
}
}
df2[8,]
class(dfs)
class(dfs)
class(df2)
df2 <- df[,1:7]
class(df2)
df2 <- df[,1:7]
class(df2)
dim(df2)
adding_col_bind <- function(x) {
emp1 <- data.frame(matrix(NA,nrow=1,ncol=ncol(X)))
emp2 <- data.frame(matrix(NA,nrow=1,ncol=ncol(X)))
colnames(emp1) <- colnames(X)
colnames(emp2) <- colnames(X)
X <- rbind(emp1,emp2,X)
}
load_narrange_UIDs <- function(xz,y,df) {
for(k in 1:length(xz)){
refer <- read.xlsx(y="",sheetName = xz[k],stringsAsFactors=FALSE)
ind <- apply(refer, 1, function(x) all(is.na(x)))
pak <- apply(refer, 2, function(x) all(is.na(x)))
refer <- refer[ !ind,!pak ]
for(i in 1:ncol(df))
for(j in 1:nrow(refer))
if(grepl(colnames(df)[i],refer$Actual.Question.[j],fixed=TRUE)==TRUE){
df[2,i] = refer[j,2]
df[1,i] = refer[j,5]
}
}
}
setwd("~/cleandata")
library(cleandata)
library(cleandata)
clean_1st_col(df)
df
df[,1]
df<- df[,-1]
clean_1st_col(df)
df[,1]
clean_1st_col(df[,1])
clean_1st_col(df)
df[,1]
df<- df[,-1]
clean_1st_col(df)
df[,1]
###Reading input file
setwd("C:/Users/kirtee/Downloads/ssd")
df <- readxl::read_excel("InputFile.xlsx")
df<- as.data.frame(df)
clean_1st_col <- function(x){
x[,1]<-stringr::str_to_lower(x[,1])
pattern2 <- c(".*\\.\\s","\\s+","\\s+$")
x[,1]<-qdap::multigsub(pattern2,"",x[,1])
}
clean_1st_col(df)
df[,1]
df<-df[,-1]
df[,1]
clean_1st_col(df)
df[,1]
clean_1st_col <- function(x){
x[,1]<-stringr::str_to_lower(x[,1])
pattern2 <- c(".*\\.\\s","\\s+","\\s+$")
x[,1]<-qdap::multigsub(pattern2,"",x[,1])
}
clean_1st_col(df[,1])
clean_1st_col(df)
clean_1st_col <- function(x){
x[,1]<- stringr::str_to_lower(x[,1])
pattern2 <- c(".*\\.\\s","\\s+","\\s+$")
x[,1]<- qdap::multigsub(pattern2,"",x[,1])
}
clean_1st_col(df)
df[,1]
x<-df
x[,1]<- stringr::str_to_lower(x[,1])
x[,1
x[,1]
x[,1]
x[,1]<- qdap::multigsub(pattern2,"",x[,1])
pattern2 <- c(".*\\.\\s","\\s+","\\s+$")
x[,1]<- qdap::multigsub(pattern2,"",x[,1])
x[,1]
clean_1st_col <- function(x){
x[,1]<- stringr::str_to_lower(x[,1])
pattern2 <- c(".*\\.\\s","\\s+","\\s+$")
x[,1]<- qdap::multigsub(pattern2,"",x[,1])
}
clean_1st_col(df)
df[,1]
df
clean_1st_col <- function(x){
x[,1]<- stringr::str_to_lower(x[,1])
pattern2 <- c(".*\\.\\s","\\s+","\\s+$")
x[,1]<- qdap::multigsub(pattern2,"",x[,1])
}
clean_1st_col(df)
df[,1]
clean_1st_col <- function(x){
x<- as.data.frame(x)
x[,1]<- stringr::str_to_lower(x[,1])
pattern2 <- c(".*\\.\\s","\\s+","\\s+$")
x[,1]<- qdap::multigsub(pattern2,"",x[,1])
}
clean_1st_col(df)
df[,1]
clean_1st_col <- function(x){
x<- as.data.frame(x)
x[,1]<- stringr::str_to_lower(x[,1])
pattern2 <- c(".*\\.\\s","\\s+","\\s+$")
x[,1]<- qdap::multigsub(pattern2,"",x[,1])
return(x[,1])
}
clean_1st_col <- function(x){
x<- as.data.frame(x)
x[,1]<- stringr::str_to_lower(x[,1])
pattern2 <- c(".*\\.\\s","\\s+","\\s+$")
x[,1]<- qdap::multigsub(pattern2,"",x[,1])
return(x[,1])
}
clean_1st_col(df)
x[,1] <- x[,1]
clean_1st_col <- function(x){
x<- as.data.frame(x)
x[,1]<- stringr::str_to_lower(x[,1])
pattern2 <- c(".*\\.\\s","\\s+","\\s+$")
x[,1]<- qdap::multigsub(pattern2,"",x[,1])
x[,1] <- x[,1]
}
clean_1st_col(df)
df[,1]
clean_1st_col <- function(x){
x<- as.data.frame(x)
x[,1]<- stringr::str_to_lower(x[,1])
pattern2 <- c(".*\\.\\s","\\s+","\\s+$")
x[,1]<- qdap::multigsub(pattern2,"",x[,1])
print("Column sucessfully cleaned")
}
clean_1st_col <- function(x){
x<- as.data.frame(x)
x[,1]<- stringr::str_to_lower(x[,1])
pattern2 <- c(".*\\.\\s","\\s+","\\s+$")
x[,1]<- qdap::multigsub(pattern2,"",x[,1])
return(print("Column sucessfully cleaned"))
}
clean_1st_col(df)
View(df)
clean_1st_col(df)
df[,1]
clean_1st_col <- function(x){
x<- as.data.frame(x)
x[,1] = stringr::str_to_lower(x[,1])
pattern2 <- c(".*\\.\\s","\\s+","\\s+$")
x[,1]= qdap::multigsub(pattern2,"",x[,1])
return(print("Column sucessfully cleaned"))
}
clean_1st_col(df)
df[,1]
clean_1st_col <- function(x){
x<- as.data.frame(x)
x[,1] = stringr::str_to_lower(x[,1])
pattern2 <- c(".*\\.\\s","\\s+","\\s+$")
x[,1]= qdap::multigsub(pattern2,"",x[,1])
x[,1]<-x[,1]
return(print("Column sucessfully cleaned"))
}
clean_1st_col(df)
df[,1]
clean_1st_col <- function(x){
x<- as.data.frame(x)
library(stringr)
x[,1] = str_to_lower(x[,1])
pattern2 <- c(".*\\.\\s","\\s+","\\s+$")
library(qdap)
x[,1]=multigsub(pattern2,"",x[,1])
x[,1]<-x[,1]
return(print("Column sucessfully cleaned"))
}
clean_1st_col(df)
df[,1]
clean_1st_col <- function(x){
x<- as.data.frame(x)
x[,1] = stringr::str_to_lower(x[,1])
pattern2 <- c(".*\\.\\s","\\s+","\\s+$")
x[,1]= qdap::multigsub(pattern2,"",x[,1])
x[,1]<-x[,1]
return(print("Column sucessfully cleaned"))
}
clean_1st_col(df)
df[,1]
clean_me <- function(df){
df[,1]<-stringr::str_to_lower(df[,1])
pattern2 <- c(".*\\.\\s","\\s+","\\s+$")
df[,1]<-qdap::multigsub(pattern2,"",df[,1])
}
clean_me(df)
df[,1]
clean_me(df)
df[,1]
df[,1]<-stringr::str_to_lower(df[,1])
df[,1
df[,1]
df[,1]
pattern2 <- c(".*\\.\\s","\\s+","\\s+$")
df[,1]<-qdap::multigsub(pattern2,"",df[,1])
df[,1]
remove_ques_brac <- function(x){
colnames(x) <- gsub("\\([A-Z]+_[A-Z]+_[A-z0-9]+_[0-9]+\\)","",colnames(x))
tidyverse::
}
remove_ques_brac <- function(x){
colnames(x) <- gsub("\\([A-Z]+_[A-Z]+_[A-z0-9]+_[0-9]+\\)","",colnames(x))
}
remove_ques_brac(df)
remove_ques_brac <- function(x){
colnames(x) <- gsub("\\([A-Z]+_[A-Z]+_[A-z0-9]+_[0-9]+\\)","",colnames(x))
}
remove_ques_brac(df)
df
View(df)
remove_ques_brac <- function(x){
colnames(x) <- gsub("\\([A-Z]+_[A-Z]+_[A-z0-9]+_[0-9]+\\)","",colnames(x))
View(df)
}
remove_ques_brac <- function(x){
colnames(x) <- gsub("\\([A-Z]+_[A-Z]+_[A-z0-9]+_[0-9]+\\)","",colnames(x))
View(df)
return(colnames(x))
}
remove_ques_brac(df)
remove_ques_brac <- function(x){
colnames(x) <- gsub("\\([A-Z]+_[A-Z]+_[A-z0-9]+_[0-9]+\\)","",colnames(x))
return(colnames(x)<- colnames(x))
}
remove_ques_brac(df)
colnames(df)
remove_ques_brac <- function(x){
colnames(x) <- gsub("\\([A-Z]+_[A-Z]+_[A-z0-9]+_[0-9]+\\)","",colnames(x))
return<- colnames(x))
}
remove_ques_brac <- function(x){
colnames(x) <- gsub("\\([A-Z]+_[A-Z]+_[A-z0-9]+_[0-9]+\\)","",colnames(x))
return<- colnames(x)
}
remove_ques_brac(df)
remove_ques_brac <- function(x){
colnames(x) <- gsub("\\([A-Z]+_[A-Z]+_[A-z0-9]+_[0-9]+\\)","",colnames(x))
return(colnames(x))
}
remove_ques_brac(df)
clean_me <- function(df,y){
y<-stringr::str_to_lower(df[,1])
pattern2 <- c(".*\\.\\s","\\s+","\\s+$")
y<-qdap::multigsub(pattern2,"",y)
df[,1] <-y
}
clean_me(df)
df[,1]
clean_me <- function(df){
y<-stringr::str_to_lower(df[,1])
pattern2 <- c(".*\\.\\s","\\s+","\\s+$")
y<-qdap::multigsub(pattern2,"",y)
df[,1] <-y
}
clean_me(df)
df[,1]
clean_me <- function(df){
y<-stringr::str_to_lower(df[,1])
df[,1] <-y
pattern2 <- c(".*\\.\\s","\\s+","\\s+$")
y<-qdap::multigsub(pattern2,"",y)
df[,1] <-y
}
clean_me(df)
df[,1]
pattern2 <- c(".*\\.\\s","\\s+","\\s+$")
qdap::multigsub(pattern2,"",df[,1])
clean_me <- function(df){
y<-stringr::str_to_lower(df[,1])
pattern2 <- c(".*\\.\\s","\\s+","\\s+$")
y<-qdap::multigsub(pattern2,"",y)
df[,1] <-y
}
clean_me(df)
df[,1]
remove_ques_brac <- function(x){
s <- gsub("\\([A-Z]+_[A-Z]+_[A-z0-9]+_[0-9]+\\)","",colnames(x))
colnames(x) <-s
}
remove_ques_brac(df)
df
remove_ques_brac <- function(x){
colnames(x) <- gsub("\\([A-Z]+_[A-Z]+_[A-z0-9]+_[0-9]+\\)","",colnames(x))
}
remove_ques_brac(df)
colnames(df)
df2 <- df2[match(teacher1,df[,1]),]
df<- df[match(teacher1,df[,1]),]
df<- df[match(teacher1,df[,1]),]
df2 <- df2[match(teacher1,df[,1]),]
